{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/risk-data/counterparties-form/counterparties-form.component.css","webpack:///./src/app/risk-data/counterparties-form/counterparties-form.component.html","webpack:///./src/app/risk-data/counterparties-form/counterparties-form.component.ts","webpack:///./src/app/risk-data/risk-data-form/risk-data-form.component.css","webpack:///./src/app/risk-data/risk-data-form/risk-data-form.component.html","webpack:///./src/app/risk-data/risk-data-form/risk-data-form.component.ts","webpack:///./src/app/risk-data/risk-data.module.ts","webpack:///./src/app/risk-data/transactions-form/transactions-form.component.css","webpack:///./src/app/risk-data/transactions-form/transactions-form.component.html","webpack:///./src/app/risk-data/transactions-form/transactions-form.component.ts","webpack:///./src/app/shared/validators/as-of-date.validator.ts","webpack:///./src/app/shared/validators/basel-portofolio.validator.ts","webpack:///./src/app/shared/validators/capital-reimbursement-amount.validator.ts","webpack:///./src/app/shared/validators/capital-reimbursement-date.validator.ts","webpack:///./src/app/shared/validators/category.validator.ts","webpack:///./src/app/shared/validators/ccf.validator.ts","webpack:///./src/app/shared/validators/counterparty-id-ricos.validator.ts","webpack:///./src/app/shared/validators/counterparty-name.validator.ts","webpack:///./src/app/shared/validators/country-of-residence.validator.ts","webpack:///./src/app/shared/validators/country-of-risk.validator.ts","webpack:///./src/app/shared/validators/group-id-ricos.validator.ts","webpack:///./src/app/shared/validators/guarantor-id-ricos.validator.ts","webpack:///./src/app/shared/validators/interest-rate-payment-frequency.validator.ts","webpack:///./src/app/shared/validators/interest-rate-periodicity.validator.ts","webpack:///./src/app/shared/validators/interest-rate-value.validator.ts","webpack:///./src/app/shared/validators/lgd.validator.ts","webpack:///./src/app/shared/validators/on-balance-flag.validator.ts","webpack:///./src/app/shared/validators/product-line.validator.ts","webpack:///./src/app/shared/validators/rating-methodology.valdiator.ts","webpack:///./src/app/shared/validators/rating.validator.ts","webpack:///./src/app/shared/validators/revenues-amount-eur.validator.ts","webpack:///./src/app/shared/validators/risk-type.validator.ts","webpack:///./src/app/shared/validators/sector.validator.ts","webpack:///./src/app/shared/validators/seniority.validator.ts","webpack:///./src/app/shared/validators/transaction-maturity-date.validator.ts","webpack:///./src/app/shared/validators/transaction-product-type.validator.ts","webpack:///./src/app/shared/validators/transaction-reference.validator.ts","webpack:///./src/app/shared/validators/unpaid-debts-startDate.Validator.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-risk-data-form></app-risk-data-form>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'risk-data';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from './material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RiskDataModule } from './risk-data/risk-data.module';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    RiskDataModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  MatSnackBarModule,\n  MatDialogModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatSidenavModule,\n  MatListModule,\n  MatMenuModule,\n  MatGridListModule,\n  MatButtonModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatCardModule,\n  MatTooltipModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatSliderModule,\n  MatChipsModule,\n  MatTabsModule,\n  MatDatepickerModule,\n  MatRadioModule,\n  MatNativeDateModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatSnackBarModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCardModule,\n    MatTooltipModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatSliderModule,\n    MatChipsModule,\n    MatTabsModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    MatNativeDateModule\n  ],\n  exports: [\n    MatSnackBarModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCardModule,\n    MatTooltipModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatSliderModule,\n    MatChipsModule,\n    MatTabsModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    MatNativeDateModule\n  ]\n})\nexport class MaterialModule {}\n","module.exports = \"\"","module.exports = \"<div fxFlex=\\\"66\\\" fxFlexOffset=\\\"15\\\">\\n  <form class=\\\"\\\" [formGroup]=\\\"counterpartiesForm\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around\\\">\\n    <h1 class=\\\"mat-h1\\\" fxLayoutAlign=\\\"center\\\">\\n      COUNTERPARTIES FORM\\n    </h1>\\n\\n    <mat-form-field class=\\\"\\\">\\n      <input required type=\\\"text\\\" maxlength=\\\"10\\\" #counterpartyIdRicos formControlName=\\\"counterpartyIdRicos\\\" matInput\\n        placeholder=\\\"Counterparty Id RICOS\\\">\\n      <mat-hint align=\\\"end\\\">{{counterpartyIdRicos.value.length}} / 10</mat-hint>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"\\\">\\n      <input required type=\\\"text\\\" maxlength=\\\"10\\\" #counterpartyName formControlName=\\\"counterpartyName\\\" matInput\\n        placeholder=\\\"Counterparty name\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"\\\">\\n      <input type=\\\"text\\\" maxlength=\\\"10\\\" #ratingMethodology formControlName=\\\"ratingMethodology\\\" matInput placeholder=\\\"Rating methodology\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"\\\">\\n      <input type=\\\"text\\\" maxlength=\\\"10\\\" #groupIdRicos formControlName=\\\"groupIdRicos\\\" matInput placeholder=\\\"Group Id RICOS\\\">\\n      <mat-hint align=\\\"end\\\">{{groupIdRicos.value.length}} / 10</mat-hint>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-select required formControlName=\\\"rating\\\" placeholder=\\\"Rating\\\">\\n        <mat-option *ngFor=\\\"let rating of ratings\\\" [value]=\\\"rating.value\\\"> {{rating.viewValue}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-select required formControlName=\\\"sector\\\" placeholder=\\\"Sector\\\">\\n        <mat-option *ngFor=\\\"let sector of sectors\\\" [value]=\\\"sector.value\\\"> {{sector.viewValue}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-select required formControlName=\\\"category\\\" placeholder=\\\"Category\\\">\\n        <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.value\\\"> {{category.viewValue}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-select required formControlName=\\\"baselPortofolio\\\" placeholder=\\\"Basel portofolio\\\">\\n        <mat-option *ngFor=\\\"let baselPortofolio of baselPortofolios\\\" [value]=\\\"baselPortofolio.value\\\">\\n          {{baselPortofolio.viewValue}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-select required formControlName=\\\"countryOfResidence\\\" placeholder=\\\"Country of residence\\\">\\n        <mat-option *ngFor=\\\"let countryOfResidence of countryOfResidences\\\" [value]=\\\"countryOfResidence.value\\\">\\n          {{countryOfResidence.viewValue}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-select required formControlName=\\\"countryOfRisk\\\" placeholder=\\\"Country of risk\\\">\\n        <mat-option *ngFor=\\\"let countryOfRisk of countryOfRisks\\\" [value]=\\\"countryOfRisk.value\\\">\\n          {{countryOfRisk.viewValue}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-select required formControlName=\\\"role\\\" placeholder=\\\"Role\\\">\\n        <mat-option *ngFor=\\\"let role of roles\\\" [value]=\\\"role.value\\\"> {{role.viewValue}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"\\\">\\n      <input required type=\\\"number\\\" min=\\\"0\\\" #revenuesAmountEur formControlName=\\\"revenuesAmountEur\\\" matInput placeholder=\\\"Revenues amount (EUR)\\\">\\n      <mat-error *ngIf=\\\"counterpartiesForm.get('revenuesAmountEur').hasError('negativeValueError')\\\">\\n        Please enter a value superior to 0\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <input required matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"unpaidDebtsStartDate\\\" placeholder=\\\"Unpaid debts Start\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n  </form>\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around center\\\">\\n    <button [disabled]=\\\"!counterpartiesForm.valid\\\" (click)=\\\"validate()\\\" class=\\\"\\\" mat-stroked-button color=\\\"primary\\\">Validate</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CounterpartyIdRicosValidator } from 'src/app/shared/validators/counterparty-id-ricos.validator';\nimport { CounterpartyNameValidator } from 'src/app/shared/validators/counterparty-name.validator';\nimport { RatingMethodologyValidator } from 'src/app/shared/validators/rating-methodology.valdiator';\nimport { GroupIdRicosValidator } from 'src/app/shared/validators/group-id-ricos.validator';\nimport { RatingValidator } from 'src/app/shared/validators/rating.validator';\nimport { SectorValidator } from 'src/app/shared/validators/sector.validator';\nimport { CategoryValidator } from 'src/app/shared/validators/category.validator';\nimport { BaselPortoFolioValidator } from 'src/app/shared/validators/basel-portofolio.validator';\nimport { CountryOfRiskValidator } from 'src/app/shared/validators/country-of-risk.validator';\nimport { RevenuesAmountEurValidator } from 'src/app/shared/validators/revenues-amount-eur.validator';\nimport { UnpaidDebtsStartDateValidator } from 'src/app/shared/validators/unpaid-debts-startDate.Validator';\nimport { CountryOfResidenceValidator } from 'src/app/shared/validators/country-of-residence.validator';\n\n@Component({\n  selector: 'app-counterparties-form',\n  templateUrl: './counterparties-form.component.html',\n  styleUrls: ['./counterparties-form.component.css']\n})\nexport class CounterpartiesFormComponent implements OnInit {\n  counterpartiesForm: FormGroup;\n  ratings: any = [\n    { value: 'A++', viewValue: 'A++' },\n    { value: 'A++', viewValue: 'A++' },\n    { value: 'A+', viewValue: 'A+' },\n    { value: 'B+', viewValue: 'B+' },\n    { value: 'B', viewValue: 'B' },\n    { value: 'C+', viewValue: 'C+' },\n    { value: 'C-', viewValue: 'C-' }\n  ];\n  sectors: any = [\n    { value: 'sectors-0', viewValue: 'Sectors-0' },\n    { value: 'sectors-1', viewValue: 'Sectors-1' },\n    { value: 'sectors-2', viewValue: 'Sectors-2' }\n  ];\n  categories: any = [\n    { value: 'category-0', viewValue: 'Category-0' },\n    { value: 'category-1', viewValue: 'Category-1' },\n    { value: 'category-2', viewValue: 'Category-2' }\n  ];\n  baselPortofolios: any = [\n    { value: 'baselPortofolio-0', viewValue: 'baselPortofolio-0' },\n    { value: 'baselPortofolio-1', viewValue: 'baselPortofolio-1' },\n    { value: 'baselPortofolio-2', viewValue: 'baselPortofolio-2' }\n  ];\n\n  countryOfResidences: any = [\n    { value: 'countryOfResidence-0', viewValue: 'countryOfResidence-0' },\n    { value: 'countryOfResidence-1', viewValue: 'countryOfResidence-1' },\n    { value: 'countryOfResidence-2', viewValue: 'countryOfResidence-2' }\n  ];\n\n  countryOfRisks: any = [\n    { value: 'countryOfRisk-0', viewValue: 'countryOfRisk-0' },\n    { value: 'countryOfRisk-1', viewValue: 'countryOfRisk-1' },\n    { value: 'countryOfRisk-2', viewValue: 'countryOfRisk-2' }\n  ];\n\n  roles: any = [\n    { value: 'role-0', viewValue: 'role-0' },\n    { value: 'role-1', viewValue: 'role-1' },\n    { value: 'role-2', viewValue: 'role-2' }\n  ];\n\n  constructor(private _formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm() {\n    this.counterpartiesForm = this._formBuilder.group({\n      counterpartyIdRicos: [\n        '',\n        Validators.compose([\n          Validators.required,\n          CounterpartyIdRicosValidator.counterpartyIdRicos\n        ])\n      ],\n      counterpartyName: ['', CounterpartyNameValidator.counterpartyName],\n      ratingMethodology: ['', RatingMethodologyValidator.ratingMethodology],\n      groupIdRicos: [\n        '',\n        Validators.compose([\n          Validators.required,\n          GroupIdRicosValidator.groupIdRicos\n        ])\n      ],\n      rating: [\n        '',\n        Validators.compose([Validators.required, RatingValidator.rating])\n      ],\n      sector: [\n        '',\n        Validators.compose([Validators.required, SectorValidator.sector])\n      ],\n      category: [\n        '',\n        Validators.compose([Validators.required, CategoryValidator.category])\n      ],\n      baselPortofolio: [\n        '',\n        Validators.compose([\n          Validators.required,\n          BaselPortoFolioValidator.baselPortofolio\n        ])\n      ],\n      countryOfResidence: [\n        '',\n        Validators.compose([\n          Validators.required,\n          CountryOfResidenceValidator.countryOfResidence\n        ])\n      ],\n      countryOfRisk: [\n        '',\n        Validators.compose([\n          Validators.required,\n          CountryOfRiskValidator.countryOfRisk\n        ])\n      ],\n      role: [],\n      revenuesAmountEur: [\n        '',\n        Validators.compose([\n          Validators.required,\n          RevenuesAmountEurValidator.revenuesAmountEur\n        ])\n      ],\n      unpaidDebtsStartDate: [\n        '',\n        Validators.compose([\n          Validators.required,\n          UnpaidDebtsStartDateValidator.unpaidDebtsStartDate\n        ])\n      ]\n    });\n  }\n\n  validate() {\n    console.log(this.counterpartiesForm.value);\n  }\n}\n","module.exports = \".mat-radio-button~.mat-radio-button {\\n  padding-right: 16px;\\n  padding-left: 16px;\\n}\\n\"","module.exports = \"<div fxLayout=\\\"row\\\">\\n\\n</div>\\n<mat-tab-group>\\n  <mat-tab label=\\\"Transactions\\\">\\n    <app-transactions-form></app-transactions-form>\\n  </mat-tab>\\n  <mat-tab label=\\\"Counterparties\\\">\\n    <app-counterparties-form></app-counterparties-form>\\n  </mat-tab>\\n</mat-tab-group>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-risk-data-form',\n  templateUrl: './risk-data-form.component.html',\n  styleUrls: ['./risk-data-form.component.css']\n})\nexport class RiskDataFormComponent implements OnInit {\n  constructor() {}\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RiskDataFormComponent } from './risk-data-form/risk-data-form.component';\nimport { TransactionsFormComponent } from './transactions-form/transactions-form.component';\nimport { CounterpartiesFormComponent } from './counterparties-form/counterparties-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule\n  ],\n  declarations: [RiskDataFormComponent, TransactionsFormComponent, CounterpartiesFormComponent],\n  exports: [RiskDataFormComponent]\n})\nexport class RiskDataModule {}\n","module.exports = \".mat-radio-button~.mat-radio-button {\\n  padding-right: 16px;\\n  padding-left: 16px;\\n}\\n\"","module.exports = \"<div fxFlex=\\\"66\\\" fxFlexOffset=\\\"15\\\">\\n  <form class=\\\"\\\" [formGroup]=\\\"riskDataForm\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around\\\">\\n    <h1 class=\\\"mat-h1\\\" fxLayoutAlign=\\\"center\\\">\\n      TRANSACTIONS FORM\\n    </h1>\\n    <mat-form-field>\\n      <input required matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"asOfDate\\\" placeholder=\\\"As Of Date\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"\\\">\\n      <input required type=\\\"number\\\" min=\\\"0\\\" #transactionReference formControlName=\\\"transactionReference\\\" matInput\\n        placeholder=\\\"Transaction reference\\\">\\n      <mat-error *ngIf=\\\"riskDataForm.get('transactionReference').hasError('negativeValueError')\\\">\\n        Please enter a value superior to 0\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-radio-group required formControlName=\\\"seniority\\\">\\n      <mat-radio-button value=\\\"SEN\\\">SEN</mat-radio-button>\\n      <mat-radio-button value=\\\"JUN\\\">JUN</mat-radio-button>\\n    </mat-radio-group>\\n\\n\\n    <mat-form-field class=\\\"\\\">\\n      <input required type=\\\"text\\\" maxlength=\\\"10\\\" #counterpartyIdRicos formControlName=\\\"counterpartyIdRicos\\\" matInput\\n        placeholder=\\\"Counterparty Id RICOS\\\">\\n      <mat-hint align=\\\"end\\\">{{counterpartyIdRicos.value.length}} / 10</mat-hint>\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"\\\">\\n      <input required type=\\\"number\\\" min=\\\"0\\\" formControlName=\\\"capitalReimbursementAmount\\\" matInput placeholder=\\\"Capital reimboursement Amount\\\">\\n      <mat-error *ngIf=\\\"riskDataForm.get('capitalReimbursementAmount').hasError('negativeValueError')\\\">\\n        Please enter a value superior to 0\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <input required matInput [matDatepicker]=\\\"picker1\\\" formControlName=\\\"capitalReimbursementDate\\\" placeholder=\\\"capital Reimbursement Date\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker1></mat-datepicker>\\n    </mat-form-field>\\n\\n\\n    <mat-radio-group required formControlName=\\\"onBalanceFlag\\\">\\n      <mat-radio-button value=\\\"B\\\">B</mat-radio-button>\\n      <mat-radio-button value=\\\"C\\\">C</mat-radio-button>\\n    </mat-radio-group>\\n\\n    <mat-form-field class=\\\"\\\">\\n      <input required type=\\\"text\\\" maxlength=\\\"10\\\" #guarantorIdRicos formControlName=\\\"guarantorIdRicos\\\" matInput\\n        placeholder=\\\"Guarantor Id RICOS\\\">\\n      <mat-hint align=\\\"end\\\">{{guarantorIdRicos.value.length}} / 10</mat-hint>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"\\\">\\n      <input required type=\\\"number\\\" min=\\\"0\\\" formControlName=\\\"interestRatePaymentFrequency\\\" matInput placeholder=\\\"Interest Rate Payment Frequency\\\">\\n      <mat-error *ngIf=\\\"riskDataForm.get('interestRatePaymentFrequency').hasError('negativeValueError')\\\">\\n        Please enter a value superior to 0\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-select required formControlName=\\\"interestRatePeriodicity\\\" placeholder=\\\"Interest rate periodicity\\\">\\n        <mat-option *ngFor=\\\"let interestRatePeriodicity of interestRatePeriodicities\\\" [value]=\\\"interestRatePeriodicity.value\\\">\\n          {{interestRatePeriodicity.viewValue}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"\\\">\\n      <input required type=\\\"number\\\" formControlName=\\\"interestRateValue\\\" matInput placeholder=\\\"Interest Rate Value\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <input required matInput [matDatepicker]=\\\"picker2\\\" formControlName=\\\"transactionMaturityDate\\\" placeholder=\\\"transaction maturity Date\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker2></mat-datepicker>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"\\\">\\n      <input required type=\\\"number\\\" formControlName=\\\"ccf\\\" matInput placeholder=\\\"Ccf\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"\\\">\\n      <input required type=\\\"number\\\" formControlName=\\\"lgd\\\" matInput placeholder=\\\"Lgd\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-select required formControlName=\\\"productLine\\\" placeholder=\\\"Product line\\\">\\n        <mat-option *ngFor=\\\"let productLine of productLines\\\" [value]=\\\"productLine.value\\\"> {{productLine.viewValue}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-select required formControlName=\\\"riskType\\\" placeholder=\\\"Risk type\\\">\\n        <mat-option *ngFor=\\\"let riskType of riskTypes\\\" [value]=\\\"riskType.value\\\"> {{riskType.viewValue}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-select required formControlName=\\\"transactionProductType\\\" placeholder=\\\"Transaction product type\\\">\\n        <mat-option *ngFor=\\\"let transactionProductType of transactionProductTypes\\\" [value]=\\\"transactionProductType.value\\\">\\n          {{transactionProductType.viewValue}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </form>\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around center\\\">\\n    <button [disabled]=\\\"!riskDataForm.valid\\\" (click)=\\\"validate()\\\" class=\\\"\\\" mat-stroked-button color=\\\"primary\\\">Validate</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AsOfDateValidator } from '../../shared/validators/as-of-date.validator';\nimport { CapitalReimbursementAmountValidator } from '../../shared/validators/capital-reimbursement-amount.validator';\nimport { CapitalReimbursementDateValidator } from '../../shared/validators/capital-reimbursement-date.validator';\nimport { CcfValidator } from '../../shared/validators/ccf.validator';\nimport { CounterpartyIdRicosValidator } from '../../shared/validators/counterparty-id-ricos.validator';\nimport { GuarantorIdRicosValidator } from '../../shared/validators/guarantor-id-ricos.validator';\nimport { InterestRatePaymentFrequencyValidator } from '../../shared/validators/interest-rate-payment-frequency.validator';\nimport { InterestRatePeriodicityValidator } from '../../shared/validators/interest-rate-periodicity.validator';\nimport { InterestRateValueValidator } from '../../shared/validators/interest-rate-value.validator';\nimport { LgdValidator } from '../../shared/validators/lgd.validator';\nimport { OnBalanceFlagValidator } from '../../shared/validators/on-balance-flag.validator';\nimport { ProductLineValidator } from '../../shared/validators/product-line.validator';\nimport { RiskTypeValidator } from '../../shared/validators/risk-type.validator';\nimport { SeniorityValidator } from '../../shared/validators/seniority.validator';\nimport { TransactionMaturityDateValidator } from '../../shared/validators/transaction-maturity-date.validator';\nimport { TransactionProductTypeValidator } from '../../shared/validators/transaction-product-type.validator';\nimport { TransactionReferenceValidator } from '../../shared/validators/transaction-reference.validator';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-transactions-form',\n  templateUrl: './transactions-form.component.html',\n  styleUrls: ['./transactions-form.component.css']\n})\nexport class TransactionsFormComponent implements OnInit {\n  riskDataForm: FormGroup;\n  riskTypes: any = [\n    { value: 'risk-0', viewValue: 'Risk-0' },\n    { value: 'risk-1', viewValue: 'Risk-1' },\n    { value: 'risk-2', viewValue: 'Risk-2' }\n  ];\n  productLines: any = [\n    { value: 'productLine-0', viewValue: 'ProductLine-0' },\n    { value: 'productLine-1', viewValue: 'ProductLine-1' },\n    { value: 'productLine-2', viewValue: 'ProductLine-2' }\n  ];\n  interestRatePeriodicities: any = [\n    {\n      value: 'interestRatePeriodicity-0',\n      viewValue: 'InterestRatePeriodicity-0'\n    },\n    {\n      value: 'interestRatePeriodicity-1',\n      viewValue: 'InterestRatePeriodicity-1'\n    },\n    {\n      value: 'interestRatePeriodicity-2',\n      viewValue: 'InterestRatePeriodicity-2'\n    }\n  ];\n  transactionProductTypes: any = [\n    {\n      value: 'transactionProductType-0',\n      viewValue: 'transactionProductType-0'\n    },\n    {\n      value: 'transactionProductType-1',\n      viewValue: 'transactionProductType-1'\n    },\n    {\n      value: 'transactionProductType-2',\n      viewValue: 'transactionProductType-2'\n    }\n  ];\n\n  constructor(private _formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm() {\n    this.riskDataForm = this._formBuilder.group({\n      asOfDate: [\n        '',\n        Validators.compose([Validators.required, AsOfDateValidator.AsOfDate])\n      ],\n      transactionReference: [\n        '',\n        Validators.compose([\n          Validators.required,\n          TransactionReferenceValidator.transactionReference\n        ])\n      ],\n      counterpartyIdRicos: [\n        '',\n        Validators.compose([\n          Validators.required,\n          CounterpartyIdRicosValidator.counterpartyIdRicos\n        ])\n      ],\n      seniority: [\n        '',\n        Validators.compose([Validators.required, SeniorityValidator.seniority])\n      ],\n      capitalReimbursementAmount: [\n        '',\n        Validators.compose([\n          Validators.required,\n          CapitalReimbursementAmountValidator.capitalReimbursementAmount\n        ])\n      ],\n      capitalReimbursementDate: [\n        '',\n        Validators.compose([\n          Validators.required,\n          CapitalReimbursementDateValidator.capitalReimbursementDate\n        ])\n      ],\n      onBalanceFlag: [\n        '',\n        Validators.compose([\n          Validators.required,\n          OnBalanceFlagValidator.onBalanceFlag\n        ])\n      ],\n      guarantorIdRicos: [\n        '',\n        Validators.compose([\n          Validators.required,\n          GuarantorIdRicosValidator.guarantorIdRicos\n        ])\n      ],\n      interestRatePaymentFrequency: [\n        '',\n        Validators.compose([\n          Validators.required,\n          InterestRatePaymentFrequencyValidator.interestRatePaymentFrequency\n        ])\n      ],\n      interestRatePeriodicity: [\n        '',\n        Validators.compose([\n          Validators.required,\n          InterestRatePeriodicityValidator.interestRatePeriodicity\n        ])\n      ],\n      interestRateValue: [\n        '',\n        Validators.compose([\n          Validators.required,\n          InterestRateValueValidator.interestRateValue\n        ])\n      ],\n      transactionMaturityDate: [\n        '',\n        Validators.compose([\n          Validators.required,\n          TransactionMaturityDateValidator.transactionMaturityDate\n        ])\n      ],\n      ccf: ['', Validators.compose([Validators.required, CcfValidator.ccf])],\n      lgd: ['', Validators.compose([Validators.required, LgdValidator.lgd])],\n      productLine: [\n        '',\n        Validators.compose([\n          Validators.required,\n          ProductLineValidator.productLine\n        ])\n      ],\n      riskType: [\n        '',\n        Validators.compose([Validators.required, RiskTypeValidator.riskType])\n      ],\n      transactionProductType: [\n        '',\n        Validators.compose([\n          Validators.required,\n          TransactionProductTypeValidator.transactionProductType\n        ])\n      ]\n    });\n  }\n\n  validate() {\n    console.log(this.riskDataForm.value);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class AsOfDateValidator {\n  constructor() {}\n\n  static AsOfDate(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class BaselPortoFolioValidator {\n  constructor() {}\n\n  static baselPortofolio(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class CapitalReimbursementAmountValidator {\n  constructor() {}\n\n  static capitalReimbursementAmount(input: FormControl): FormValidationResult {\n    if (input === undefined) {\n      return null;\n    }\n    if (input.value < 0) {\n      return { negativeValueError: true };\n    }\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class CapitalReimbursementDateValidator {\n  constructor() {}\n\n  static capitalReimbursementDate(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class CategoryValidator {\n  constructor() {}\n\n  static category(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class CcfValidator {\n  constructor() {}\n\n  static ccf(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class CounterpartyIdRicosValidator {\n  constructor() {}\n\n  static counterpartyIdRicos(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class CounterpartyNameValidator {\n  constructor() {}\n\n  static counterpartyName(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class CountryOfResidenceValidator {\n  constructor() {}\n\n  static countryOfResidence(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class CountryOfRiskValidator {\n  constructor() {}\n\n  static countryOfRisk(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class GroupIdRicosValidator {\n  constructor() {}\n\n  static groupIdRicos(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class GuarantorIdRicosValidator {\n  constructor() {}\n\n  static guarantorIdRicos(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class InterestRatePaymentFrequencyValidator {\n  constructor() {}\n\n  static interestRatePaymentFrequency(\n    input: FormControl\n  ): FormValidationResult {\n    if (input === undefined) {\n      return null;\n    }\n    if (input.value < 0) {\n      return { negativeValueError: true };\n    }\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class InterestRatePeriodicityValidator {\n  constructor() {}\n\n  static interestRatePeriodicity(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class InterestRateValueValidator {\n  constructor() {}\n\n  static interestRateValue(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class LgdValidator {\n  constructor() {}\n\n  static lgd(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class OnBalanceFlagValidator {\n  constructor() {}\n\n  static onBalanceFlag(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class ProductLineValidator {\n  constructor() {}\n\n  static productLine(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class RatingMethodologyValidator {\n  constructor() {}\n\n  static ratingMethodology(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class RatingValidator {\n  constructor() {}\n\n  static rating(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class RevenuesAmountEurValidator {\n  constructor() {}\n\n  static revenuesAmountEur(input: FormControl): FormValidationResult {\n    if (input === undefined) {\n      return null;\n    }\n    if (input.value < 0) {\n      return { negativeValueError: true };\n    }\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class RiskTypeValidator {\n  constructor() {}\n\n  static riskType(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class SectorValidator {\n  constructor() {}\n\n  static sector(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class SeniorityValidator {\n  constructor() {}\n\n  static seniority(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class TransactionMaturityDateValidator {\n  constructor() {}\n\n  static transactionMaturityDate(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class TransactionProductTypeValidator {\n  constructor() {}\n\n  static transactionProductType(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class TransactionReferenceValidator {\n  constructor() {}\n\n  static transactionReference(input: FormControl): FormValidationResult {\n    if (input === undefined) {\n      return null;\n    }\n    if (input.value < 0) {\n      return { negativeValueError: true };\n    }\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormValidationResult } from './form.validator';\n\n@Injectable()\nexport class UnpaidDebtsStartDateValidator {\n  constructor() {}\n\n  static unpaidDebtsStartDate(group: FormGroup): FormValidationResult {\n    return null;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}